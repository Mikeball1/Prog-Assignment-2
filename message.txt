The waterfall methodology is named accordingly as the functionality of it resembles the one of a waterfall. It is structured under the pretense that one phase must be completed (accomplished) before the next phase is able to start falling on each other like a waterfall. The phases together can be summarized into five requirements: design, implementation, verification, and maintenance, all of which can be broken down into sub phases if the development team wishes. It has its advantages as well as disadvantages as any model would. It holds clear advantages over its adversary models as it is methodically planned out and holds an expectation for its end goal, while subsequently outlining how to reach said goal. The quality of work tends to be higher due to the advancement of the software development onto the next phase being dependent on the previous phase being completed. From this also stems the advantage of there not being a steep learning curve as teams know what to work on right away. Although the waterfall methodology has these advantages, its strengths also pose its shortcomings. Since it is planned meticulously, it is difficult to make changes within the rigid project structure. The inability to adapt and react to sudden changes in a project can possibly render all the work up to that point useless. In addition, the fragmented nature of these phases delay testing which excludes the clientele as the focus of the model is to help teams finish development more efficiently. This leads to delays in updates and debugging until the very end of the process which leads to any revisions causing delays in finishing development. The system works perfectly only when it is executed as such, but the foundations of its pillars appear frail before the practical issues of software development. With these advantages and disadvantages in mind, the implementation of this methodology boils down to the type of project a team is developing. A project with little need for updates and a very clear plan of what is needed is a perfect match however a project with lots of testing and changes should opt in for a different method.